#!/bin/bash
# {{ ansible_managed }}

[ -f ~/.duplicity_credentials ] && source ~/.duplicity_credentials

LOGFILE="{{ backup_log_file }}"
BUCKET={{ backup_backup_dest }}
OLDER_THAN="--full-if-older-than {{ backup_full_if_older_than }}"
INCLUDE="{% for source in backup_backup_sources %}--include {{ source }} {% endfor %}"

{% if backup_report_email is defined %}
EMAIL={{ backup_report_email | default('') }}
EMAIL_SUBJECT="{{ backup_report_email_subject }}"
{% endif %}

backup() {
  duplicity $OLDER_THAN $INCLUDE --exclude '**' / $BUCKET > $LOGFILE
  {% if backup_report_email is defined %}
  mail -s $EMAIL_SUBJECT $EMAIL < $LOGFILE
  {% endif %}
}

list() {
  duplicity list-current-files $BUCKET
}

restore() {
  if [ $# = 2 ]; then
    duplicity restore --file-to-restore $1 $BUCKET $2
  else
    duplicity restore --file-to-restore $1 --time $2 $VUCKET $3
  fi
}

status() {
  duplicity collection-status $BUCKET
}

if [ "$1" = "backup" ]; then
  backup
elif [ "$1" = "list" ]; then
  list
elif [ "$1" = "restore" ]; then
  if [ $# = 3 ]; then
    restore $2 $3
  else
    restore $2 $3 $4
  fi
elif [ "$1" = "status" ]; then
  status
else
  echo "
  duptools - manage duplicity backup

  USAGE:

  ./duptools.sh backup
  ./duptools.sh list
  ./duptools.sh status
  ./duptools.sh restore file [time] dest
  "
fi

export AWS_ACCESS_KEY_ID=
export AWS_SECRET_ACCESS_KEY=
export PASSPHRASE=
